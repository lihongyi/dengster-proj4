Jeffrey Deng, cs186-bo
Justin Chan, cs186-fq

[Describe any design decisions you made. These may be minimal for Project 1]

For TupleDesc, we decided to store our TDItems in an ArrayList. This is because the “Array part” of the ArrayList gave us fast GETs and SETs, while the “List part” of the ArrayList allowed us to be lazy and just call .iterator() to return an iterator.

For Tuple, we decided to use an array because we already knew how many fields there would be to begin with. In retrospect, we probably could have used an ArrayList here as well given that there was a method that asked to return an iterator over all Fields, but it turns out that returning an iterator from an array isn’t that hard to be gin with anyway, so we stuck with our choice.

For Catalog, it was HashMaps all the way given that pretty much every method we were asked to write required a lookup corresponding to the parameter.  We even added an “extra” HashMap that mapped table names to their table IDs.

For BufferPool, we again used a HashMap because we thought it was pretty obvious to map Page IDs to the Page themselves.

For HeapFile, we decided to write an auxiliary class for the iterator because it was getting way too confusing doing it without one. Our strategy there was basically to write an iterator that “iterates” over the iterators of each of its HeapPages. Yeah, it was confusing.

For the rest of the project, we did not feel like any “major” design decisions needed to be made.

[Discuss and justify any changes you made to the API]

We do not recall making any changes to the API.

[Describe any missing or incomplete elements of your code]
We think we did everything – anything we intentionally left out was not required for project 1.

[Describe briefly who worked on what (if you worked with a partner)]
We brainstormed all the solutions together. Actually-writing-the-code-wise, Jeffrey did exercises 1, 2, and 3 – while Justin did exercises 4, 5, and 6.

[Describe how long you (and your partner) spent on the project, and whether there was anything you found particularly difficult or confusing]
It took about 10 hours total for the project. The only thing that tripped us up a bit was writing the iterator for HeapFile since it required writing an auxiliary class.
