Jeffrey Deng, cs186-bo
Justin Chan, cs186-fq


Describe any design decisions you made. These may be minimal for Project 1
-For implementing TupleDesc.java, we used an ArrayList. This was to take advantage of Java's Libraries when implement our own setter, getter, iterator, and other methods. Since ArrayList made these very easy, it also made implementing the other methods simpler. The ArrayList allowed us to efficiently access by index, as well as efficiently increase the size of the ArrayList when merging.

-For implementing Tuple.java, we used an array of fields because we already know what our exact size of the array will be from the number of fields in the TupleDesc.
This makes accessing and changing those fields simple and efficient.

-For Catalog.java, We implemented the Hashmaps and added another Hashmap ReverseFileNames to make it easily accessible to retrieve the Keys by the Names rather than iterating through the table and checking every key and what name corresponds. 

-For BufferPool.java, We use a hashmap of pages, these helps eliminate the possibility of duplicated pages, and also throw an exception when there are too many pages been added.

-For HeapPage.java, 

-For HeapFile.java, we did not make many design decisions, as we were given the skeletons. 

-For SeqScan.java,




Discuss and justify any changes you made to the API
- No real changes made to API

Describe any missing or incomplete elements of your code
- No missing or incomplete

Describe briefly who worked on what (if you worked with a partner)


Describe how long you (and your partner) spent on the project, and whether there was anything you found particularly difficult or confusing